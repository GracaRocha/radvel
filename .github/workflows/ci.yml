name: CI

on:
  push:
    branches:
      - main
      - master
      - github-actions
  pull_request:
    branches:
      - main
      - master
  release:
    types: [published]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, 3.11, 3.12]

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y gcc git pkg-config libhdf5-hl-100 libhdf5-dev
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        if [ "${{ matrix.python-version }}" = "3.8" ]; then
          pip install --no-cache-dir "numpy<1.26.0" "scipy<1.11.0" -r requirements.txt
        else
          pip install --no-cache-dir -r requirements.txt
        fi
        # Install celerite to test if it resolves GP covariance matrix issues
        pip install celerite
        pip install coveralls pytest pytest-cov coverage
    
    - name: Install build dependencies
      run: |
        pip install Cython pybind11 setuptools wheel hatchling
    
    - name: Build and test
      run: |
        # Build C extension explicitly to ensure _kepler is compiled in CI
        python setup.py build_ext -i
        pip install -e .
        # Ensure example data path is available to tests
        export RADVEL_DATADIR="$GITHUB_WORKSPACE/example_data"
        python -c "import os; p=os.environ.get('RADVEL_DATADIR'); print('RADVEL_DATADIR=', p); import radvel; print('radvel.DATADIR=', radvel.DATADIR)"
        python -c "import radvel._kepler; print('C extension _kepler available')"
        # Debug: Check Python version and pytest version
        python --version
        pytest --version
        # Debug: Check if tests can be collected
        pytest radvel --collect-only -q
        # Run tests with more verbose output
        pytest radvel --cov=radvel --cov-report=term-missing -v --tb=long
    
    - name: Upload coverage to Coveralls
      if: matrix.python-version == '3.8'
      env:
        COVERALLS_REPO_TOKEN: ${{ secrets.COVERALLS_REPO_TOKEN }}
      run: |
        coverage xml
        coveralls

  build-and-deploy:
    needs: test
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.8'
    
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: python -m build
    
    - name: Publish to PyPI
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: twine upload dist/*
